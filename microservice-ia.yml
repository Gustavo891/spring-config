resilience4j:
  ratelimiter:
    instances:
      openAIRateLimiter:
        limit-for-period: 15
        limit-refresh-period: 1m
        timeout-duration: 0
  circuitbreaker:
    instances:
      openAICircuitBreaker:
        register-health-indicator: true
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 60s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        record-exceptions:
          - org.springframework.ai.retry.NonTransientAiException
          - java.lang.RuntimeException
          - org.springframework.web.client.ResourceAccessException
          - java.util.concurrent.TimeoutException
      serverlessCircuitBreaker:
        register-health-indicator: true
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        record-exceptions:
          - java.lang.RuntimeException
          - org.springframework.web.client.ResourceAccessException
          - java.util.concurrent.TimeoutException
  timelimiter:
    instances:
      openAICircuitBreaker:
        timeout-duration: 3s
      serverlessCircuitBreaker:
        timeout-duration: 3s
